# Generated by Django 4.1.7 on 2023-07-23 23:45

from django.db import migrations

class Migration(migrations.Migration):
    dependencies = [
        ('SmartContentBackendClientsAndBusinessApp', '0061_update_client'),
    ]

    operations = [
    migrations.RunSQL("""
        DROP PROCEDURE IF EXISTS update_business;

        CREATE PROCEDURE update_business(
           IN p_business_id INT,
           IN p_name VARCHAR(360),
           IN p_facebook_page VARCHAR(360),
           IN p_services json,  
           IN p_phone VARCHAR(360),
           IN p_address_id INT,
           IN p_website VARCHAR(360),
           IN p_mail VARCHAR(100),
           IN p_industry_id INT,
           IN p_schedule VARCHAR(360),
           IN p_target_audience TEXT,
           IN p_client_id INT,
           IN p_mission TEXT,
           IN p_vision TEXT,
           IN p_logo_image VARCHAR(360))
           
  BEGIN
    declare j int default 0;
	declare i int default 0;
    
    IF p_logo_image = '' OR p_logo_image IS NULL THEN
			SELECT logo_carpet INTO p_logo_image FROM businesses where id = p_business_id;
	END IF;
	
               UPDATE businesses
                    SET name = p_name,
                    target_audience = p_target_audience,
                    facebook_page   = p_facebook_page,
                    phone           = p_phone,
                    website        = p_website,
                    mail            = p_mail,
                    schedule        = p_schedule,
                    mission        = p_mission,
                    vision      = p_vision,
                    address_id    = p_address_id,
                    industry_id    = p_industry_id,
                    created_at    = NOW(),
                    logo_carpet = p_logo_image
                WHERE id = p_business_id;
               
               
-- Esta variable contendrá la lista de IDs del JSON
SET @not_deletes = '';

-- Inicializa el contador j
SET i = 0;

-- Recorre el JSON y construye la lista de IDs
WHILE i < JSON_LENGTH(p_services) DO
 

    -- Obtiene el ID del servicio del JSON
    SET @not_delete = JSON_UNQUOTE(JSON_EXTRACT(p_services, CONCAT('$[', i, '].id')));
    
    -- Agrega el ID a la lista, separado por comas
    IF @service_ids = '' THEN
        SET @not_deletes = @not_delete;
    ELSE
        SET @not_deletes = CONCAT(@not_deletes, ',', @not_delete);
    END IF;
   
  
  
    
    -- Incrementa el contador
    SET i = i + 1;
END WHILE;
          
               
               set @id = p_business_id;
   
    while j<JSON_LENGTH(p_services) DO
    
     set @level_importance = JSON_UNQUOTE(JSON_EXTRACT(p_services,CONCAT('$[',j, '].level_importance')));
     set @service_id = JSON_UNQUOTE(JSON_EXTRACT(p_services,CONCAT('$[',j, '].id')));

    
    set @validar = (select count(*) from services_business sb where sb.service_id = @service_id and sb.business_id=@id);
    
    IF ( @validar =0) then
    
   INSERT INTO services_business(level_importance,business_id,service_id)
    VALUES (
        1, 
        @id, 
        @service_id 
    );
   end if;
  
   
   set j = j + 1;
            end while;
               
               SET @not_deletes = SUBSTRING(@not_deletes, 2);

-- Actualiza la tabla services_business usando la lista de IDs
SET @sql = CONCAT('UPDATE services_business 
                   SET deleted_at = NOW() 
                   WHERE business_id = @id 
                   AND service_id NOT IN (', @not_deletes, ')');
                   
-- Ejecuta la consulta dinámica
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
  
              
  
  
               
      
END
    """)
]